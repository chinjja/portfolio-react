{"version":3,"sources":["images/banner.jpg","images/me.jpg","images/m1.png","images/calendar.png","images/cafe.png","components/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","marginTop","marginBottom","paper","maxWidth","margin","padding","contents","paddingLeft","paddingRight","card","subtitle","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","View","AppBar","position","Toolbar","Typography","variant","CardMedia","component","alt","height","image","banner","Container","process","style","top","Grid","container","item","xs","Subtitle","sm","me","TypoLink","href","src","Description","Projects","Link","classes","className","label","url","disable_href","undefined","display","align","description","desc","map","d","i","color","Spacer","space","useState","CollapseCard","m1","subheader","content","paragraph","cal","cafe","props","expanded","setExpanded","handleExpandClick","Card","CardActionArea","onClick","CardContent","gutterBottom","Collapse","in","timeout","unmountOnExit","CardActions","IconButton","ExpandMore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f6efd59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.43cfaa52.jpg\";","export default __webpack_public_path__ + \"static/media/me.7fe89aaf.jpg\";","export default __webpack_public_path__ + \"static/media/m1.82252381.png\";","export default __webpack_public_path__ + \"static/media/calendar.8f145495.png\";","export default __webpack_public_path__ + \"static/media/cafe.8af28571.png\";","import React, { useState } from 'react';\nimport { AppBar, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Collapse, Container, Grid, IconButton, Link, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core';\nimport banner from '../images/banner.jpg'\nimport me from '../images/me.jpg'\nimport m1 from '../images/m1.png'\nimport cal from '../images/calendar.png'\nimport cafe from '../images/cafe.png'\nimport { Variant } from '@material-ui/core/styles/createTypography';\nimport { ExpandMore } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      marginTop: \"16px\",\n      marginBottom: \"16px\",\n    },\n    paper: {\n        maxWidth: 400,\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(2),\n    },\n    contents: {\n        maxWidth: 800,\n        margin: \"auto\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n    },\n    card: {\n        // maxWidth: 345,\n    },\n    subtitle: {\n        marginTop: \"16px\",\n        marginBottom: \"16px\",\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    }\n  }));\n\nexport function View() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <header>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <Typography variant=\"h6\">😀안녕하세요, 박정현입니다!👋</Typography>\n                    </Toolbar>\n                </AppBar>\n            </header>\n            <main>\n                <Toolbar/>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"300\"\n                    image={banner}\n                    title=\"Contemplative Reptile\"\n                />\n                \n                <Container maxWidth=\"md\">\n                    <CardMedia\n                        component=\"img\"\n                        image={process.env.PUBLIC_URL + '/logo.png'}\n                        style={{\n                            position: \"relative\",\n                            top: \"-40px\",\n                            maxWidth: \"80px\",\n                            marginBottom: \"-20px\"\n                    }}/>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            {Subtitle('안녕하세요, 박정현입니다! 👋', 'h4')}\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"Contemplative Reptile\"\n                                image={me}\n                                title=\"Contemplative Reptile\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            {TypoLink(\"📧 Email\", \"chinjja@gmail.com\", true)}\n                            {TypoLink(\"🐱 GitHub\", \"https://github.com/chinjja\")}\n                            {TypoLink(\"📚 BOJ\", \"https://www.acmicpc.net/user/chinjja\")}\n                            {/* {TypoLink(\"🍀 Naver Blog\", \"https://www.naver.com\")} */}\n                            {/* {TypoLink(\"📷 Instagram\", \"https://www.instagram.com\")} */}\n                            <a href=\"https://hits.seeyoufarm.com\"><img src=\"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fchinjja%2Fhit-counter&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false\"/></a>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            {Description(\"App Developer\", [\n                                \"코드로 일하는 개발자\",\n                                \"문제해결을 즐기는 개발자\",\n                                \"사람들이 필요로 하는 것이 무엇인지 고민하는 개발자\",\n                            ])}\n                        </Grid>\n\n                        {/* <Grid item xs={12}>\n                            {Subtitle('🏆 Awards')}\n                            {Awards()}\n                        </Grid> */}\n                        \n                        <Grid item xs={12}>\n                            {Subtitle('🛠️ Stacks')}\n                            {Stacks()}\n                        </Grid>\n                        \n                        {/* <Grid item xs={12}>\n                            {Subtitle('🎒 Activities')}\n                            {Activities()}\n                        </Grid> */}\n                        \n                        <Grid item xs={12}>\n                            {Subtitle('👩‍💻 Projects')}\n                            {Projects()}\n                        </Grid>\n\n                        {/* <Grid item xs={12}>\n                            {Subtitle('👩‍🏫 Education')}\n                            {Education()}\n                        </Grid> */}\n\n                    </Grid>\n                </Container>\n\n            </main>\n            <footer>\n                <Link href=\"https://icons8.com\">https://icons8.com</Link>\n            </footer>\n        </div>\n    )\n}\n\nfunction Subtitle(title: string, variant: Variant = \"h5\") {\n    const classes = useStyles();\n    return <Typography className={classes.subtitle} variant={variant}>{title}</Typography>\n}\n\nfunction TypoLink(label: string, url: string, disable_href: boolean | undefined = undefined) {\n    return (\n        <div style={{\n            marginBottom: \"16px\",\n        }}>\n            <Typography display=\"block\" align=\"left\">{label}</Typography>\n            <Link href={disable_href?undefined:url} display=\"block\" align=\"left\">{url}</Link>\n        </div>\n    )\n}\n\nfunction Awards() {\n    return (\n        <>\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>A</TableCell>\n                        <TableCell>B</TableCell>\n                        <TableCell>C</TableCell>\n                        <TableCell>D</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>1</TableCell>\n                        <TableCell>2</TableCell>\n                        <TableCell>3</TableCell>\n                        <TableCell>4</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>1</TableCell>\n                        <TableCell>2</TableCell>\n                        <TableCell>3</TableCell>\n                        <TableCell>4</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </>\n    )\n}\n\nfunction Stacks() {\n    return (\n        <>\n        {Description(\"Java\", [\n            \"Java를 사용해여 Android 앱을 개발해 본 경험이 있습니다.\",\n            \"Swing을 사용하여 프로젝트를 개발했습니다.\",\n            \"Java를 사용해서 생각을 구현으로 이끌어 낼 수 있습니다.\",\n        ])}\n        {Description(\"Git\", [\n            \"Git을 활용한 소스코드 버전 관리 및 협업을 할 수 있습니다.\",\n        ])}\n        {Description(\"ReactiveX, RxJava, RxDart\", [\n            \"반응형 프로그래밍 작성 가능.\",\n            \"비동기에 대해서 이해하고 있으며 Rx를 쓰지 않고도 개발가능.\",\n        ])}\n        {Description(\"Flutter\", [\n            \"현재 습득 중 입니다..\",\n            \"레퍼런스를 참고해서 생각을 앱으로 제작 가능.\",\n        ])}\n        </>\n    )\n}\n\nfunction Description(title: string, description: string[]) {\n    let desc = description.map((d, i) => \n    <Typography key={i} variant=\"body1\" align=\"left\" color=\"textSecondary\">{d}</Typography>\n    )\n\n    return (\n        <>\n        <Typography variant=\"h6\" align=\"left\">{title}</Typography>\n        {Spacer(\"8px\")}\n        {desc}\n        {Spacer(\"16px\")}\n        </>\n    )\n}\n\nfunction Spacer(space: string) {\n    return <div style={{marginBottom: space}}></div>\n}\n\nfunction Activities() {\n    return (\n        <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n            {Activity()}\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n            {Activity()}\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n            {Activity()}\n            </Grid>\n        </Grid>\n        </>\n    )\n}\n\nfunction Projects() {\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false)\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n    return (\n        <>\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <CollapseCard \n                image={m1}\n                title='장비 제어 프로그램 with Java' \n                subheader='' \n                content={\n                    <>\n                    <Typography paragraph>Java, Swing을 사용하여 사내 제작 설비 제어 프로그램 개발.</Typography>\n                    <Typography paragraph>구현한 기능</Typography>\n                    <Typography paragraph>1. UI (Swing)</Typography>\n                    <Typography paragraph>2. DB (SQLite)</Typography>\n                    <Typography paragraph>3. 각종 디바이스 통신 (Serial or TCP or HTTP)</Typography>\n                    <Typography paragraph>4. 설비 제어</Typography>\n                    </>\n                }/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <CollapseCard \n                image={cal}\n                title='Calendar App with Flutter' \n                subheader='https://github.com/chinjja/flutter_calendar_app' \n                content={\n                    <>\n                    <Typography paragraph>Flutter의 기본적인 사용법을 익히기 위해 진행</Typography>\n                    <Typography paragraph>구현한 기능</Typography>\n                    <Typography paragraph>1. 월간 보기(수직 스크롤)</Typography>\n                    <Typography paragraph>2. 일간 보기</Typography>\n                    <Typography paragraph>3. 이벤트 상세보기</Typography>\n                    <Typography paragraph>4. 이벤트 편집기능(yet..)</Typography>\n                    </>\n                }/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <CollapseCard \n                image={cafe}\n                title='Cafe App with Spring boot' \n                subheader='https://github.com/chinjja/cafe' \n                content={\n                    <>\n                    <Typography paragraph>Spring boot의 기본적인 사용법을 익히기 위해 진행</Typography>\n                    <Typography paragraph>구현한 기능</Typography>\n                    <Typography paragraph>1. 재귀적인 카테고리 생성/삭제</Typography>\n                    <Typography paragraph>2. 재귀적인 답글 생성/삭제</Typography>\n                    <Typography paragraph>3. 좋아요 기능</Typography>\n                    <Typography paragraph>4. 조회수 기능 (1분)</Typography>\n                    <Typography paragraph>5. 카페가입/탈퇴 기능</Typography>\n                    <Typography paragraph>6. 카페 운영진 가입승인 기능</Typography>\n                    <Typography paragraph>7. Bootstrap UI</Typography>\n                    </>\n                }/>\n            </Grid>\n        </Grid>\n        </>\n    )\n}\n\ninterface CollapseCardProps {\n    image: string,\n    title: string,\n    subheader: string,\n    content: JSX.Element,\n}\n\nfunction CollapseCard(props: CollapseCardProps) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false)\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n    return (\n        <>\n        <Card className={classes.card}>\n            <CardActionArea onClick={handleExpandClick}>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={props.image}\n                    title=\"Contemplative Reptile\"\n                    \n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {props.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.subheader}\n                    </Typography>\n                </CardContent>\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\n                    <CardContent>\n                        <hr/>\n                        {props.content}\n                    </CardContent>\n                </Collapse>\n            </CardActionArea>\n            <CardActions>\n                <IconButton\n                    className={expanded?classes.expandOpen:classes.expand}\n                    onClick={handleExpandClick}>\n                    <ExpandMore/>\n                </IconButton>\n            </CardActions>\n        </Card>\n        </>\n    )\n}\n\nfunction Education() {\n    return (\n        <Typography variant=\"body1\">2000</Typography>\n    )\n}\n\nfunction Activity() {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={banner}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Lizard\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                        across all continents except Antarctica\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">Share</Button>\n                <Button size=\"small\" color=\"primary\">Learn More</Button>\n            </CardActions>\n        </Card>\n    )\n}","import React from 'react';\nimport {View} from './components/View'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <View/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}